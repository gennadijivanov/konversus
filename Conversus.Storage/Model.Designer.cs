//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("conversusModel", "FK_Clients_0_0", "Queues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conversus.Storage.Queues), "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conversus.Storage.Clients), true)]

#endregion

namespace Conversus.Storage
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class conversusEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект conversusEntities, используя строку соединения из раздела "conversusEntities" файла конфигурации приложения.
        /// </summary>
        public conversusEntities() : base("name=conversusEntities", "conversusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта conversusEntities.
        /// </summary>
        public conversusEntities(string connectionString) : base(connectionString, "conversusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта conversusEntities.
        /// </summary>
        public conversusEntities(EntityConnection connection) : base(connection, "conversusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Clients> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Clients>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Clients> _Clients;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Queues> Queues
        {
            get
            {
                if ((_Queues == null))
                {
                    _Queues = base.CreateObjectSet<Queues>("Queues");
                }
                return _Queues;
            }
        }
        private ObjectSet<Queues> _Queues;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Clients. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToClients(Clients clients)
        {
            base.AddObject("Clients", clients);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Queues. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToQueues(Queues queues)
        {
            base.AddObject("Queues", queues);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conversusModel", Name="Clients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clients : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Clients.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="queueId">Исходное значение свойства QueueId.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="bookingTime">Исходное значение свойства BookingTime.</param>
        /// <param name="status">Исходное значение свойства Status.</param>
        public static Clients CreateClients(global::System.Guid id, global::System.Guid queueId, global::System.String name, global::System.DateTime bookingTime, global::System.Int32 status)
        {
            Clients clients = new Clients();
            clients.Id = id;
            clients.QueueId = queueId;
            clients.Name = name;
            clients.BookingTime = bookingTime;
            clients.Status = status;
            return clients;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid QueueId
        {
            get
            {
                return _QueueId;
            }
            set
            {
                OnQueueIdChanging(value);
                ReportPropertyChanging("QueueId");
                _QueueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QueueId");
                OnQueueIdChanged();
            }
        }
        private global::System.Guid _QueueId;
        partial void OnQueueIdChanging(global::System.Guid value);
        partial void OnQueueIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BookingTime
        {
            get
            {
                return _BookingTime;
            }
            set
            {
                OnBookingTimeChanging(value);
                ReportPropertyChanging("BookingTime");
                _BookingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingTime");
                OnBookingTimeChanged();
            }
        }
        private global::System.DateTime _BookingTime;
        partial void OnBookingTimeChanging(global::System.DateTime value);
        partial void OnBookingTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TakeTicket
        {
            get
            {
                return _TakeTicket;
            }
            set
            {
                OnTakeTicketChanging(value);
                ReportPropertyChanging("TakeTicket");
                _TakeTicket = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakeTicket");
                OnTakeTicketChanged();
            }
        }
        private Nullable<global::System.DateTime> _TakeTicket;
        partial void OnTakeTicketChanging(Nullable<global::System.DateTime> value);
        partial void OnTakeTicketChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PerformStart
        {
            get
            {
                return _PerformStart;
            }
            set
            {
                OnPerformStartChanging(value);
                ReportPropertyChanging("PerformStart");
                _PerformStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerformStart");
                OnPerformStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _PerformStart;
        partial void OnPerformStartChanging(Nullable<global::System.DateTime> value);
        partial void OnPerformStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PerformEnd
        {
            get
            {
                return _PerformEnd;
            }
            set
            {
                OnPerformEndChanging(value);
                ReportPropertyChanging("PerformEnd");
                _PerformEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerformEnd");
                OnPerformEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _PerformEnd;
        partial void OnPerformEndChanging(Nullable<global::System.DateTime> value);
        partial void OnPerformEndChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PIN
        {
            get
            {
                return _PIN;
            }
            set
            {
                OnPINChanging(value);
                ReportPropertyChanging("PIN");
                _PIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PIN");
                OnPINChanged();
            }
        }
        private Nullable<global::System.Int32> _PIN;
        partial void OnPINChanging(Nullable<global::System.Int32> value);
        partial void OnPINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ticket
        {
            get
            {
                return _Ticket;
            }
            set
            {
                OnTicketChanging(value);
                ReportPropertyChanging("Ticket");
                _Ticket = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ticket");
                OnTicketChanged();
            }
        }
        private global::System.String _Ticket;
        partial void OnTicketChanging(global::System.String value);
        partial void OnTicketChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conversusModel", "FK_Clients_0_0", "Queues")]
        public Queues Queues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Queues>("conversusModel.FK_Clients_0_0", "Queues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Queues>("conversusModel.FK_Clients_0_0", "Queues").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Queues> QueuesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Queues>("conversusModel.FK_Clients_0_0", "Queues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Queues>("conversusModel.FK_Clients_0_0", "Queues", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conversusModel", Name="Queues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Queues : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Queues.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        public static Queues CreateQueues(global::System.Guid id, global::System.Int32 type)
        {
            Queues queues = new Queues();
            queues.Id = id;
            queues.Type = type;
            return queues;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conversusModel", "FK_Clients_0_0", "Clients")]
        public EntityCollection<Clients> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clients>("conversusModel.FK_Clients_0_0", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clients>("conversusModel.FK_Clients_0_0", "Clients", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
